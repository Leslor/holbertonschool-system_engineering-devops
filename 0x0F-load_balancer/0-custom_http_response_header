#!/usr/bin/env bash
# Install nginx on the web-01 server
old_url="\tserver_name _;\n\trewrite ^\/redirect_me https:\/\/www.youtube.com\/watch\?v=QH2-TGUlwu4 permanent;"

sudo apt-get update -y
sudo apt-get install nginx -y
sudo ufw allow 'Nginx HTTP'

echo "Hello World" | sudo tee /var/www/html/index.nginx-debian.html
sudo sed -i "s/server_name _;/$old_url/" /etc/nginx/sites-available/default

echo "Ceci n'est pas une page" | sudo tee /var/www/html/custom_404.html
replace2="\n\terror_page 404 /custom_404.html;\n\tlocation = /var/www/html/custom_404.html {\n\t\tinternal;\n\t}"

sudo sed -i "47i\ $replace2" /etc/nginx/sites-available/default


#Configure Nginx so that its HTTP response contains a custom header (on web-01 and web-02)
#The name of the custom HTTP header must be X-Served-By
#The value of the custom HTTP header must be the hostname of the server Nginx is running on

echo "
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
        listen 80 default_server;
        listen [::]:80 default_server;
	add_header X-Served-By $HOSTNAME;
        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

                server_name _;

        error_page 404 /custom_404.html;
        location = /var/www/html/custom_404.html {
                internal;
        }
        rewrite ^/redirect_me https://www.youtube.com/watch?v=QH2-TGUlwu4 permanent;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files \$uri \$uri/ =404;
        }
	# pass PHP scripts to FastCGI server
        #
	#location ~ \.php$ {
	#       include snippets/fastcgi-php.conf;
	#
	#       # With php-fpm (or other unix sockets):
	#       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#       # With php-cgi (or other tcp sockets):
	#       fastcgi_pass 127.0.0.1:9000;
	#}
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
} " | sudo tee /etc/nginx/sites-available/default

# Restar Nginx Server
sudo service nginx restart
